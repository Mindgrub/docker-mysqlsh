name: release

on:
  push:
    branches:
      - main

env:
  REGISTRY_IMAGE: mindgrub/mysqlsh

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        platform:
          - "linux/amd64"
        mysql_version:
          - "8.0"
          - "8.4"

    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.mysql_version }}
          # build-args:
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Export exact version
        run: |
          mysqlsh_version=$(docker run --rm "$REGISTRY_IMAGE@${{ steps.build.outputs.digest }}" mysqlsh --version)
          echo "$mysqlsh_version"
          echo "${mysqlsh_version#mysqlsh}" | awk -F' ' '{print $2}' > /tmp/digests/full-version.txt

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.mysql_version }}-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  manifest:
    runs-on: ubuntu-latest

    needs: build

    strategy:
      fail-fast: false
      matrix:
        mysql_version:
          - "8.0"
          - "8.4"

    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-${{ matrix.mysql_version }}*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get full version
        id: fullversion
        run: |
          fullversion=$(cat /tmp/digests/full-version.txt)
          echo "fullversion=$fullversion" >> "$GITHUB_OUTPUT"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=raw,value=latest,enabled=${{ matrix.mysql_version == '8.4' }}
            type=raw,value=8,enabled=${{ matrix.mysql_version == '8.4' }}
            type=raw,value=${{ matrix.mysql_version }}
            type=raw,value=${{ matrix.mysql_version }}-debian
            type=raw,value=${{ matrix.mysql_version }}-bookworm
            type=raw,value=${{ steps.fullversion.outputs.fullversion }}-debian
            type=raw,value=${{ steps.fullversion.outputs.fullversion }}-bookworm

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
